---
#                   _
#   __ _ _ __   ___| |__   ___  _ __ ___
#  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
# | (_| | | | | (__| | | | (_) | |  \__ \
#  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
_anchors:
- &builder_common_options
  boot_command:
  - '<esc><esc><esc><enter><wait>'
  - '/casper/vmlinuz root=/dev/sr0 initrd=/casper/initrd autoinstall '
  - 'ds=nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/{{ user `userdata_location` }}/'
  - '<enter>'
  boot_wait: '{{ user `boot_wait` }}'
  communicator: '{{ user `communicator` }}'
  cpus: '{{ user `cpus` }}'
  disk_size: '{{ user `disk_size` }}'
# floppy_dirs: ([]string)
# floppy_files: ([]string)
# floppy_label: (string)
  headless: '{{ user `headless` }}'
  host_port_max: '{{ user `host_port_max` }}'
  host_port_min: '{{ user `host_port_min` }}'
# http_bind_address: 0.0.0.0
  http_directory: '{{ user `http_directory` }}'
  http_port_max: '{{ user `http_port_max` }}'
  http_port_min: '{{ user `http_port_min` }}'
  iso_checksum: '{{ user `iso_checksum` }}'
  iso_target_extension: iso
  iso_target_path: '{{ user `packer_cache_dir` }}/{{ user `iso_file` }}'
# iso_url: (string)
  iso_urls:
  - '{{ user `iso_path_internal` }}/{{ user `iso_file` }}'
  - '{{ user `iso_path_external` }}/{{ user `iso_file` }}'
  memory: '{{ user `memory` }}'
  output_directory: '{{ user `output_directory` }}'
# pause_before_connecting: '{{ user `pause_before_connecting` }}'
  shutdown_command: echo '{{ user `ssh_password` }}' | sudo -E -S poweroff
  shutdown_timeout: '{{ user `shutdown_timeout` }}'
  skip_nat_mapping: false
  vm_name: '{{ user `vm_name` }}'
- &communicator_ssh_options
  ssh_agent_auth: '{{ user `ssh_agent_auth` }}'
# ssh_bastion_agent_auth: false
# ssh_bastion_host: (string)
# ssh_bastion_password: (string)
# ssh_bastion_port: '22'
# ssh_bastion_private_key_file: (string)
# ssh_bastion_username: (string)
# ssh_ciphers: [ 'aes128-gcm@openssh.com', 'chacha20-poly1305@openssh.com', 'aes128-ctr', 'aes192-ctr', 'aes256-ctr', ]
  ssh_clear_authorized_keys: '{{ user `ssh_clear_authorized_keys` }}'
  ssh_disable_agent_forwarding: '{{ user `ssh_disable_agent_forwarding` }}'
  ssh_file_transfer_method: '{{ user `ssh_file_transfer_method` }}'
  ssh_handshake_attempts: '{{ user `ssh_handshake_attempts` }}'
# ssh_host: (string)
  ssh_keep_alive_interval: '{{ user `ssh_keep_alive_interval` }}'
  ssh_password: '{{ user `ssh_password` }}'
  ssh_port: '{{ user `ssh_port` }}'
# ssh_private_key_file: (string)
# ssh_proxy_host: (string)
# ssh_proxy_password: (string)
# ssh_proxy_port: '1080'
# ssh_proxy_username: (string)
  ssh_pty: '{{ user `ssh_pty` }}'
# ssh_read_write_timeout: (string)
  ssh_timeout: '{{ user `ssh_timeout` }}'
  ssh_username: '{{ user `ssh_username` }}'
- &provisioner_shell_options
  binary: false
# environment_vars: ([]string)
  execute_command: echo '{{ user `ssh_password` }}' | {{ .Vars }} sudo -E -S '{{ .Path }}'
  expect_disconnect: true
  inline_shebang: /bin/sh -e
# remote_file: script_nnn.sh
# remote_folder: /tmp
# remote_path: /tmp/script_nnn.sh
  skip_clean: false
  start_retry_timeout: '{{ user `start_retry_timeout` }}'
  type: shell
#  _           _ _     _
# | |__  _   _(_) | __| | ___ _ __ ___
# | '_ \| | | | | |/ _` |/ _ \ '__/ __|
# | |_) | |_| | | | (_| |  __/ |  \__ \
# |_.__/ \__,_|_|_|\__,_|\___|_|  |___/
builders:
#                    _      _               _ _                    _
#             __   _(_)_ __| |_ _   _  __ _| | |__   _____  __    (_)___  ___
#             \ \ / / | '__| __| | | |/ _` | | '_ \ / _ \ \/ /____| / __|/ _ \
#              \ V /| | |  | |_| |_| | (_| | | |_) | (_) >  <_____| \__ \ (_) |
#               \_/ |_|_|   \__|\__,_|\__,_|_|_.__/ \___/_/\_\    |_|___/\___/
- <<: [*builder_common_options, *communicator_ssh_options]
  bundle_iso: '{{ user `bundle_iso` }}'
# export_opts: ([]string)
  format: ova
# guest_additions_interface: sata
  guest_additions_mode: disable
# guest_additions_path: VBoxGuestAdditions.iso
# guest_additions_sha256: (string)
# guest_additions_url: (string)
  guest_os_type: '{{ user `guest_os_type` }}'
  hard_drive_discard: false
  hard_drive_interface: sata
  hard_drive_nonrotational: false
  iso_interface: sata
  keep_registered: '{{ user `keep_registered` }}'
  name: vbox
  post_shutdown_delay: 0s
  sata_port_count: '1'
  skip_export: '{{ user `skip_export` }}'
  type: virtualbox-iso
  vboxmanage:
  - - modifyvm
    - '{{ .Name }}'
    - '--firmware'
    - efi
  - - modifyvm
    - '{{ .Name }}'
    - '--rtcuseutc'
    - >-
      {{ if user `system_clock_in_utc` | eq `true` -}}
      on
      {{- else -}}
      off
      {{- end }}
# vboxmanage_post: ([][]string)
  virtualbox_version_file: '/tmp/.vbox_version'
  vrdp_bind_address: '{{ user `vnc_vrdp_bind_address` }}'
  vrdp_port_max: '{{ user `vnc_vrdp_port_max` }}'
  vrdp_port_min: '{{ user `vnc_vrdp_port_min` }}'
#                                                    __ _  ___ _ __ ___  _   _
#                                                   / _` |/ _ \ '_ ` _ \| | | |
#                                                  | (_| |  __/ | | | | | |_| |
#                                                   \__, |\___|_| |_| |_|\__,_|
#                                                      |_|
- <<: [*builder_common_options, *communicator_ssh_options]
  accelerator: kvm
  disk_cache: writeback
  disk_compression: false
  disk_discard: ignore
  disk_image: false
  disk_interface: virtio-scsi
  format: raw
  iso_skip_cache: false
  machine_type: pc
  name: qemu
  net_device: virtio-net
  qemu_binary: '{{ user `qemu_binary` }}'
  qemuargs:
  - - -bios
    - OVMF.fd
  skip_compaction: true
  type: qemu
  use_default_display: false
  vnc_bind_address: '{{ user `vnc_vrdp_bind_address` }}'
  vnc_port_max: '{{ user `vnc_vrdp_port_max` }}'
  vnc_port_min: '{{ user `vnc_vrdp_port_min` }}'
description: '{{ user `description` }}'
min_packer_version: 1.6.2
#                  _
#  _ __   ___  ___| |_      _ __  _ __ ___   ___ ___  ___ ___  ___  _ __ ___
# | '_ \ / _ \/ __| __|____| '_ \| '__/ _ \ / __/ _ \/ __/ __|/ _ \| '__/ __|
# | |_) | (_) \__ \ ||_____| |_) | | | (_) | (_|  __/\__ \__ \ (_) | |  \__ \
# | .__/ \___/|___/\__|    | .__/|_|  \___/ \___\___||___/___/\___/|_|  |___/
# |_|                      |_|
post-processors:
- compression_level: 6
# include: ([]string)
  keep_input_artifact: true
  only:
  - vbox
  - qemu
  output: '{{ user `output_directory` }}/{{ user `vm_name` }}-{{ user `version` }}-{{ build_name }}.box'
  type: vagrant
  vagrantfile_template: '{{ user `vagrantfile_template` }}'
- compression_level: 6
  format: .gz
  keep_input_artifact: true
  only:
  - qemu
  output: '{{ user `output_directory` }}/{{ user `vm_name` }}.raw.gz'
  type: compress
# - - files:
#     - '{{ user `output_directory` }}/{{ user `vm_name` }}*.box'
#     keep_input_artifact: true
#     only:
#     - vbox
#     type: artifice
# XXX CHECKSUM
# - inline_shebang: /bin/sh -e
# # environment_vars: ([]string)
#   execute_command: chmod +x "{{ .Script }}"; {{ .Vars }} "{{ .Script }}"
#   inline:
#   - echo '---' > {{ user `output_directory` }}/{{ user `vm_name` }}.yaml
#   - 'echo ''name: {{ user `vm_name` }}'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - 'echo ''description: {{ user `description` }}'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - echo 'versions:' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml
#   - 'echo ''- version: {{ user `version` }}'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - echo '  providers:' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml
#   - 'echo ''  - name: XXXPROVIDER'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - 'echo ''    url: http://myserver/vm/{{ user `vm_name` }}/{{ user `vm_name` }}-{{ user `version` }}-''{{ build_name }}''.box''
#     >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - 'echo ''    checksum_type: sha256'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - 'echo ''    checksum: deadbeef'' >> {{ user `output_directory` }}/{{ user `vm_name` }}.yaml'
#   - if [ 'vbox' = '{{ build_name }}' ]; then sed -i 's/XXXPROVIDER/virtualbox/' '{{ user `output_directory` }}/{{ user `vm_name` }}.yaml'; fi
#   - if [ 'qemu' = '{{ build_name }}' ]; then sed -i 's/XXXPROVIDER/libvirt/' '{{ user `output_directory` }}/{{ user `vm_name` }}.yaml'; fi
#   only:
#   - vbox
#   - qemu
#   type: shell-local
#                       _     _
#  _ __  _ __ _____   _(_)___(_) ___  _ __   ___ _ __ ___
# | '_ \| '__/ _ \ \ / / / __| |/ _ \| '_ \ / _ \ '__/ __|
# | |_) | | | (_) \ V /| \__ \ | (_) | | | |  __/ |  \__ \
# | .__/|_|  \___/ \_/ |_|___/_|\___/|_| |_|\___|_|  |___/
# |_|
provisioners:
- <<: *provisioner_shell_options
  inline:
  - echo 'FS0:\EFI\ubuntu\grubx64.efi' > /boot/efi/startup.nsh
  only:
  - vbox
  - qemu
- <<: *provisioner_shell_options
  inline:
  - apt-get update
  - apt-get --yes dist-upgrade
  - apt-get clean
  only:
  - vbox
  - qemu
- <<: *provisioner_shell_options
  inline:
  - dd if=/dev/zero of=/ZEROFILL bs=16M || true
  - rm /ZEROFILL
  - sync
  only:
  - vbox
  - qemu
#                  _       _     _
# __   ____ _ _ __(_) __ _| |__ | | ___  ___
# \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
#  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
#   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
variables:
  apt_cache_url: http://software-cache.prd.cryogen.tk:3142/
  boot_wait: 6s
  bundle_iso: 'false'
  communicator: ssh
  country: CA
  cpus: '1'
  description: 'Base box (UEFI) for x86_64 Ubuntu Focal Fossa 20.04.x LTS'
  disk_size: '7500'
  domain: ''
  guest_os_type: Ubuntu_64
  headless: 'false'
  host_port_max: '4444'
  host_port_min: '2222'
  http_directory: '.'
  http_port_max: '9000'
  http_port_min: '8000'
# iso_checksum: file:http://releases.ubuntu.com/20.04/SHA256SUMS
  iso_checksum: sha256:443511f6bf12402c12503733059269a2e10dec602916c0a75263e5d990f6bb93
  iso_file: ubuntu-20.04.1-live-server-amd64.iso
  iso_path_external: http://releases.ubuntu.com/20.04
  iso_path_internal: http://myserver:8080/ubuntu
  keep_registered: 'false'
  keyboard: us
  language: en
  locale: en_CA.UTF-8
  memory: '1024'
  min_vagrant_version: 2.2.10
  output_directory: 'build/{{ isotime "2006-01-02-15-04-05" }}'
  packer_cache_dir: '{{ env `PACKER_CACHE_DIR` }}'
  qemu_binary: qemu-system-x86_64
  shutdown_timeout: 5m
  skip_export: 'false'
  ssh_agent_auth: 'false'
  ssh_clear_authorized_keys: 'false'
  ssh_disable_agent_forwarding: 'false'
  ssh_file_transfer_method: scp
  ssh_fullname: Ghost Writer
  ssh_handshake_attempts: '100'
  ssh_keep_alive_interval: 5s
  ssh_password: 1ma63b0rk3d
  ssh_password_crypted: '$6$w5yFawT.$d51yQ513SdzariRCjomBwO9IMtMh6.TjnRwQqTBlOMwGhyyVXlJeYC9kanFp65bpoS1tn9x7r8gLP5Dg4CtEP1'
  ssh_port: '22'
  ssh_pty: 'false'
  ssh_timeout: 60m
  ssh_username: ghost
  start_retry_timeout: 5m
  system_clock_in_utc: 'true'
  timezone: UTC
  userdata_location: template/ubuntu/20.04_focal
  vagrantfile_template: template/ubuntu/20.04_focal/base-uefi.vagrant
  version: 0.0.0
  vm_name: base-uefi-focal
  vnc_vrdp_bind_address: 127.0.0.1
  vnc_vrdp_port_max: '6000'
  vnc_vrdp_port_min: '5900'
